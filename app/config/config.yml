imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    view: { annotations: false }
    router: { annotations: true }
    request: { converters: true }

simple_things_entity_audit:
    audited_entities:
        - PROCERGS\NotificationServiceBundle\Entity\APIKey
        - PROCERGS\NotificationServiceBundle\Entity\Category
        - PROCERGS\NotificationServiceBundle\Entity\Notification
        - PROCERGS\NotificationServiceBundle\Entity\Receiver
        - PROCERGS\NotificationServiceBundle\Entity\ReceiverOption
        - PROCERGS\NotificationServiceBundle\Entity\Sender
        - PROCERGS\NotificationServiceBundle\Entity\User

fos_rest:
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            xml:  true
            json: true
        templating_formats:
            html: true
    format_listener:
        rules:
            - { path: ^/, priorities: [ html, json, xml ], fallback_format: ~, prefer_extension: true }
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    body_listener: true
    disable_csrf_role: ROLE_API

nelmio_api_doc:
    name: Notifications API

jms_security_extra:
    # Whether you want to secure all services (true), or only secure specific
    # services (false); see also below
    secure_all_services: false

    # Enabling this setting will add an additional special attribute "ROLE_IDDQD".
    # Anybody with this attribute will effectively bypass all security checks.
    enable_iddqd_attribute: false

    # Enables expression language
    expressions: false

    # Allows you to disable some, or all built-in voters
    voters:
        disable_authenticated: false
        disable_role:          false
        disable_acl:           false

    # Allows you to specify access control rules for specific methods, such
    # as controller actions
    method_access_control: { }

    util:
        secure_random: ~
